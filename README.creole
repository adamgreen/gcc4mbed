==Current Version
**GCC Version:**  [[https://launchpad.net/gcc-arm-embedded/4.8/4.8-2014-q1-update | GCC ARM Embedded 4.8-2014-q1-update]]\\
**mbed SDK Version:** [[https://github.com/mbedmicro/mbed/releases/tag/mbed_lib_rev92 | Revision 92]]\\

==Previous Versions
[[https://github.com/adamgreen/gcc4mbed/tree/gcc4.8-2014-q1_mbed91|GCC ARM Embedded 4.8-2014-q1-update with mbed SDK revision 91]]\\
[[https://github.com/adamgreen/gcc4mbed/tree/gcc4.8-2014-q1_mbed88|GCC ARM Embedded 4.8-2014-q1-update with mbed SDK revision 88]]\\
[[https://github.com/adamgreen/gcc4mbed/tree/gcc4.8-2014-q1_mbed85|GCC ARM Embedded 4.8-2014-q1-update with mbed SDK revision 85]]\\
[[https://github.com/adamgreen/gcc4mbed/tree/gcc4.8-2014-q1_mbed84|GCC ARM Embedded 4.8-2014-q1-update with mbed SDK revision 84]]\\
[[https://github.com/adamgreen/gcc4mbed/tree/gcc4.7-2012-q4_mbed54|GCC ARM Embedded 4.7-2012-q4-major with mbed SDK revision 54]]\\
[[https://github.com/adamgreen/gcc4mbed/tree/gcc4.6-2012-q1_mbed43|GCC ARM Embedded 4.6-2012-q1-update with mbed SDK revision 43]]\\
[[https://github.com/adamgreen/gcc4mbed/tree/cs2011.03-42_mbed28|Code Sourcery G++ Lite 2011.03-42 with mbed SDK revision 28]]\\

==Quick Start
These are the quick steps to get gcc4mbed installed on your computer:
* Download the gcc4mbed compressed archive from [[https://github.com/adamgreen/gcc4mbed/zipball/master]]
* Decompress and extract the contents of this archive.
* Run the install script appropriate for your platform:
** Windows: win_install.cmd
** OS X: mac_install
** Linux: linux_install
* You can then run the BuildShell script which will be created during the install to properly configure the PATH environment variable.  You may want to edit this script to further customize your development environment.

===Important Notes:
* Files will fail to install to a FAT based file system.  Extract to a more appropriate file system (ie. NTFS on Windows) first and then copy to a FAT drive after installation.
* If the installation should fail, please refer to win_install.log, linux_install.log, or mac_install.log.  It will contain the details of the installation process and any errors that were encountered.
* The OS X install only supports 64-bit Intel machines.  The installers for the other platforms only install 32-bit Intel binaries.
* OS X Mountain Lion and newer will fail to execute mac_install by simply clicking on it.  Instead right click on mac_install in the Finder, select the Open option, and then click the Open button in the resulting security warning dialog.
* The Linux install only installs 32-bit Intel binaries.  If you are running a 64-bit version of Intel Linux then you may need to install the 32-bit support libraries.  This problem typically shows up as a file not found error when you attempt to run tools such as arm-none-eabi-g++.  On Ubuntu, the necessary libraries can be installed by running {{{sudo apt-get install ia32-libs}}}
* If you don't need floating point support from scanf() and printf() routines in your program then you can reduce your binary size by setting NO_FLOAT_SCANF and NO_FLOAT_PRINTF make variables to 1.  See samples/HelloWorld/makefile for an example.

==More Information
**[[https://github.com/adamgreen/gcc4mbed/blob/master/notes/eclipse.creole|Eclipse]]:**  Learn how to use the Eclipse IDE to build and debug GCC4MBED programs.\\
\\
**[[https://github.com/adamgreen/mri/blob/master/README.creole#mri---monitor-for-remote-inspection|Debugging]]:**  Learn how to use the GNU Debugger, GDB, with the new MRI debug monitor in GCC4MBED.\\
\\
**[[https://github.com/adamgreen/gcc4mbed/blob/master/notes/overview.creole#overview|Overview]]:**  Overview and a bit of history related to this GCC4MBED project.\\
\\
**[[https://github.com/adamgreen/gcc4mbed/blob/master/notes/install.creole#installation|Installation]]:**  For more information about how to install and use the GCC4MBED project.\\
\\
**[[https://github.com/adamgreen/gcc4mbed/blob/master/notes/makefile.creole#make-variables|Makefile Configuration]]:**  Information about makefile options to customize your project's binary.\\
\\
**[[https://github.com/adamgreen/gcc4mbed/blob/master/notes/porting.creole#readme|Porting]]:**  Notes on porting applications from mbed cloud compiler to offline GCC4MBED project.\\
\\
**[[https://github.com/adamgreen/gcc4mbed/blob/master/notes/new_devices.creole#adding-new-devices-to-gcc4mbed|Adding Devices]]:**  Notes on how to add new device support to GCC4MBED.\\

==Thanks
The author wants to thank Arthur Wolf for the [[http://developer.mbed.org/forum/mbed/topic/2336/|posting]] he made back in May on 2011 which kicked off this whole gcc4mbed project and for all of the testing and feedback he has given since.

Thanks to Felyza Wishbringer for writing the first Windows install script which provided the inspiration for the Windows, Mac, and Linux scripts that are now included in the gcc4mbed project.

Thanks for all of the others who have provided valuable feedback since this project was first released.  Much of that feedback can be found in this [[http://developer.mbed.org/forum/mbed/topic/2701/|mbed forum thread]]

==Have fun!!
